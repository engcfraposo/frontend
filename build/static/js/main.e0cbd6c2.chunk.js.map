{"version":3,"sources":["assets/search.svg","assets/background.svg","styles/index.ts","components/Menu/styles.ts","components/Menu/index.tsx","components/UserComponent/styles.ts","components/UserComponent/index.tsx","components/RadarChartComponent/styles.ts","components/RadarChartComponent/index.tsx","components/BarChartComponent/styles.ts","components/BarChartComponent/index.tsx","components/LanguagesComponent/styles.ts","components/LanguagesComponent/index.tsx","pages/Stats/styles.ts","pages/Stats/index.tsx","pages/About/styles.ts","pages/About/index.tsx","pages/Contact/styles.ts","pages/Contact/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Reset","createGlobalStyle","Header","styled","div","Screen","List","ul","Item","li","RouterLink","Link","Menu","to","UserBox","UserText","h3","UserTitle","h2","UserLink","a","UserComponent","user","login","bio","href","html_url","RadarChartContainer","RadarChartComponent","props","data","outerRadius","dataKey","stroke","fill","fillOpacity","BarChartContainer","BarChartComponent","height","width","margin","top","right","left","bottom","barSize","scale","padding","strokeDasharray","LanguagesBox","LanguagesText","LanguagesTitle","map","content","key","name","value","Content","Form","form","Avatar","img","SearchContainer","Search","input","SearchIconButton","button","SearchIcon","NoContent","UpperDashboardContainer","LowerDashboardContainer","Title","h1","RepositoryList","select","RepositoryOption","option","Stats","useState","selectedRepository","setSelectedRepository","setLogin","repositories","setRepositories","id","avatar_url","setUser","JavaScript","TypeScript","PHP","HTML","CSS","stats","setStats","setData","event","preventDefault","axios","get","users","respos","useEffect","then","response","datas","Object","entries","onSubmit","src","background","type","onChange","e","target","placeholder","search","alt","data-testid","useMemo","repository","LanguagesComponent","Container","AboutBox","Image","AboutText","AboutTitle","About","ContactBox","ContactTitle","ContactImput","ContactTextArea","textarea","ContactButton","Contact","setName","email","setEmail","phone","setPhone","text","setText","alert","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0cbd6c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.671e5db3.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.b0c7eca4.svg\";","import { createGlobalStyle } from 'styled-components';\n\nexport const Reset = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n  }\n  input, textarea, select, button {\n    outline: 0;\n  }\n\n  div {\n    overflow: hidden;\n  }\n\n  body{\n    background: #3e78b2;\n  }\n  :root {\n      font-size: 16;\n\n      @media (max-width: 768px) {\n        font-size: 12;\n      };\n  }\n`;\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Header = styled.div`\r\n  align-items: center;\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  display: fixed;\r\n  height: 10vh;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  @media (max-width: 768px) {\r\n    height: 30vh;\r\n  }\r\n`;\r\n\r\nexport const Screen = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin: 0 auto;\r\n  width: 90vw;\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul``;\r\n\r\nexport const Item = styled.li`\r\n  display: inline-block;\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const RouterLink = styled(Link)`\r\n  color: #3e78b2;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin-right: 20px;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #ffbe55;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Screen, List, Item, Header, RouterLink } from './styles';\r\n\r\nconst Menu: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Screen>\r\n          <List>\r\n            <RouterLink to=\"/\">\r\n              <Item>Home</Item>\r\n            </RouterLink>\r\n\r\n            <RouterLink to=\"/about\">\r\n              <Item>Sobre</Item>\r\n            </RouterLink>\r\n\r\n            <RouterLink to=\"/contact\">\r\n              <Item>Contato</Item>\r\n            </RouterLink>\r\n          </List>\r\n        </Screen>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import styled from 'styled-components';\n\nexport const UserBox = styled.div`\n  align-items: center;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  height: 140px;\n  justify-content: center;\n  width: 400px;\n  @media (max-width: 768px) {\n    border: 2px solid #fff;\n    margin-top: 10px;\n    width: 300px;\n  }\n`;\n\nexport const UserText = styled.h3`\n  color: #fff;\n  font-family: Roboto, Arial, Helvetica, sans-serif;\n  font-size: 12px;\n  margin-top: 5px;\n  text-align: center;\n  @media (max-width: 768px) {\n    font-size: 10px;\n  }\n`;\n\nexport const UserTitle = styled.h2`\n  color: #ffbe55;\n  font-family: Roboto, Arial, Helvetica, sans-serif;\n  font-size: 16px;\n  text-align: center;\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\nexport const UserLink = styled.a`\n  color: #fff;\n  font-family: Roboto, Arial, Helvetica, sans-serif;\n  font-size: 12px;\n  margin-top: 5px;\n  text-align: center;\n  text-decoration: none;\n  @media (max-width: 768px) {\n    font-size: 10px;\n  }\n`;\n","/* eslint-disable camelcase */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nimport { UserBox, UserTitle, UserText, UserLink } from './styles';\r\n\r\ninterface UserProps {\r\n  user: {\r\n    id: number;\r\n    login: string;\r\n    avatar_url: string;\r\n    bio: string;\r\n    html_url: string;\r\n  };\r\n}\r\n\r\nconst UserComponent: React.FC<UserProps> = ({ user }) => {\r\n  return (\r\n    <>\r\n      <UserBox>\r\n        <UserTitle>\r\n          Login:\r\n          {user.login}\r\n        </UserTitle>\r\n        <UserText>\r\n          Bio:\r\n          {user.bio}\r\n        </UserText>\r\n        <UserLink href={user.html_url}>\r\n          Site:\r\n          {user.html_url}\r\n        </UserLink>\r\n      </UserBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserComponent;\r\n","import styled from 'styled-components';\n\nexport const RadarChartContainer = styled.div`\n  align-items: center;\n  height: 300px;\n  justify-content: center;\n  padding-top: 10px;\n  width: 500px;\n  @media (max-width: 768px) {\n    height: 400px;\n    width: 400px;\n    margin-top: 10px;\n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  ResponsiveContainer,\n} from 'recharts';\n\nimport { RadarChartContainer } from './styles';\n\ninterface DataProps {\n  data: Array<{ name: string; value: number }>;\n}\n\nconst RadarChartComponent: React.FC<DataProps> = (props) => {\n  const { data } = props;\n\n  return (\n    <>\n      <RadarChartContainer>\n        <ResponsiveContainer>\n          <RadarChart outerRadius={100} data={data}>\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"name\" stroke=\"#ffbe55\" />\n            <PolarRadiusAxis />\n            <Radar\n              dataKey=\"value\"\n              stroke=\"#fff\"\n              fill=\"#fff\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </ResponsiveContainer>\n      </RadarChartContainer>\n    </>\n  );\n};\n\nexport default RadarChartComponent;\n","import styled from 'styled-components';\n\nexport const BarChartContainer = styled.div`\n  height: 140px;\n  width: 600px;\n  @media (max-width: 768px) {\n    height: 240px;\n    width: 360px;\n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts';\n\nimport { BarChartContainer } from './styles';\n\ninterface DataProps {\n  data: Array<{ name: string; value: number }>;\n}\n\nconst BarChartComponent: React.FC<DataProps> = (props) => {\n  const { data } = props;\n\n  return (\n    <>\n      <BarChartContainer>\n        <ResponsiveContainer>\n          <BarChart\n            height={160}\n            width={100}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n            barSize={10}\n          >\n            <XAxis\n              dataKey=\"name\"\n              scale=\"auto\"\n              padding={{ left: 0, right: 0 }}\n              stroke=\"#ffbe55\"\n            />\n            <YAxis stroke=\"#FFF\" />\n            <CartesianGrid strokeDasharray=\"2 2\" stroke=\"#FFF\" />\n            <Bar dataKey=\"value\" fill=\"#FFF\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </BarChartContainer>\n    </>\n  );\n};\n\nexport default BarChartComponent;\n","import styled from 'styled-components';\n\nexport const LanguagesBox = styled.div`\n  align-items: center;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  width: 250px;\n  @media (max-width: 768px) {\n    margin-top: 10px;\n    border: 2px solid #fff;\n    width: 300px;\n  }\n`;\n\nexport const LanguagesText = styled.h3`\n  color: #fff;\n  font-family: Roboto, Arial, Helvetica, sans-serif;\n  font-size: 10px;\n  margin-top: 5px;\n  @media (max-width: 768px) {\n    font-size: 8px;\n  }\n`;\n\nexport const LanguagesTitle = styled.h2`\n  color: #ffbe55;\n  font-family: Roboto, Arial, Helvetica, sans-serif;\n  font-size: 16px;\n  margin: 5px auto;\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { LanguagesBox, LanguagesText, LanguagesTitle } from './styles';\n\ninterface DataProps {\n  data: Array<{ name: string; value: number }>;\n}\n\nconst RadarChartComponent: React.FC<DataProps> = (props) => {\n  const { data } = props;\n\n  return (\n    <>\n      <LanguagesBox>\n        <LanguagesTitle>Linguagens:</LanguagesTitle>\n        {data.map((content) => (\n          <LanguagesText key={content.name}>\n            {content.name}:{content.value} palavras\n          </LanguagesText>\n        ))}\n      </LanguagesBox>\n    </>\n  );\n};\n\nexport default RadarChartComponent;\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 20px;\n  position: relative;\n`;\n\nexport const Form = styled.form`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 20px;\n  position: relative;\n`;\n\nexport const Avatar = styled.img`\n  border: 2px solid #fff;\n  border-radius: 50%;\n  height: 90px;\n  width: 90px;\n`;\n\nexport const SearchContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin-top: 10px;\n`;\n\nexport const Search = styled.input`\n  background: #004ba8;\n  border: 2px solid #fff;\n  border-radius: 50px;\n  color: #fff;\n  font-size: 15px;\n  font-weight: bold;\n  height: 25px;\n  padding: 0 30px 0 12px;\n  width: 190px;\n  ::-webkit-input-placeholder {\n    color: #fff;\n  }\n  &:hover {\n    background: #ffbe55;\n    color: #004ba8;\n  }\n`;\n\nexport const SearchIconButton = styled.button`\n  background: #004ba8;\n  border: 2px solid #fff;\n  border-radius: 50%;\n  cursor: pointer;\n  height: 30px;\n  width: 30px;\n  &:hover {\n    background: #ffbe55;\n  }\n`;\n\nexport const SearchIcon = styled.img`\n  height: 15px;\n  width: 15px;\n`;\n\nexport const NoContent = styled.img`\n  height: 100%;\n  margin-top: 10px;\n  width: 220px;\n`;\n\nexport const UpperDashboardContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  overflow: hidden;\n  width: 1200px;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const LowerDashboardContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 10px;\n  width: 1200px;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #ffbe55;\n  font-family: Roboto, Arial, Helvetica, sans-serif;\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const RepositoryList = styled.select`\n  background: #004ba8;\n  border: 2px solid #fff;\n  border-radius: 50px;\n  color: #fff;\n  font-size: 15px;\n  font-weight: bold;\n  height: 25px;\n  margin-top: 5px;\n  padding: 0 30px 0 12px;\n  width: 260px;\n  ::-webkit-input-placeholder {\n    color: #fff;\n  }\n  &:hover {\n    background: #ffbe55;\n    color: #004ba8;\n    :-webkit-input-placeholder {\n      color: #004ba8;\n    }\n  }\n`;\n\nexport const RepositoryOption = styled.option`\n  background: #004ba8;\n  color: #fff;\n`;\n","/* eslint-disable camelcase */\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState, FormEvent, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport UserComponent from '../../components/UserComponent';\nimport RadarChartComponent from '../../components/RadarChartComponent';\nimport BarChartComponent from '../../components/BarChartComponent';\nimport LanguagesComponent from '../../components/LanguagesComponent';\nimport {\n  Content,\n  Avatar,\n  Form,\n  Title,\n  SearchContainer,\n  Search,\n  NoContent,\n  SearchIconButton,\n  SearchIcon,\n  RepositoryList,\n  RepositoryOption,\n  UpperDashboardContainer,\n  LowerDashboardContainer,\n} from './styles';\nimport search from '../../assets/search.svg';\nimport background from '../../assets/background.svg';\n\ninterface GITHUBLogin {\n  id: number;\n  name: string;\n}\n\ninterface GITHUBUser {\n  id: number;\n  login: string;\n  avatar_url: string;\n  bio: string;\n  html_url: string;\n}\n\ninterface Language {\n  JavaScript: number;\n  TypeScript: number;\n  PHP: number;\n  HTML: number;\n  CSS: number;\n}\n\ninterface Data {\n  name: string;\n  value: number;\n}\n\nconst Stats: React.FC = () => {\n  const [selectedRepository, setSelectedRepository] = useState<string>('0');\n  const [login, setLogin] = useState<string>('');\n  const [repositories, setRepositories] = useState<GITHUBLogin[]>([]);\n  const [user, setUser] = useState<GITHUBUser>({\n    id: 0,\n    login: '',\n    avatar_url: '',\n    html_url: '',\n    bio: '',\n  });\n  const [stats, setStats] = useState<Language>({\n    JavaScript: 0,\n    TypeScript: 0,\n    PHP: 0,\n    HTML: 0,\n    CSS: 0,\n  });\n  const [data, setData] = useState<Data[]>([\n    {\n      name: '',\n      value: 0,\n    },\n  ]);\n\n  // Acesso a API de linguagem do GitHub\n  useEffect(() => {\n    if (selectedRepository === '0') {\n      return;\n    }\n    axios\n      .get<Language>(\n        `https://api.github.com/repos/${login}/${selectedRepository}/languages`,\n      )\n      .then((response) => setStats(response.data));\n  }, [login, selectedRepository]);\n  // Transformação de API de linguagem do GitHub\n  useEffect(() => {\n    const datas = Object.entries(stats).map(([name, value]) => {\n      return { name, value };\n    });\n\n    setData(datas);\n  }, [stats]);\n  // Função de acesso aos repositórios do github\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  async function handleLogin(event: FormEvent) {\n    event.preventDefault();\n    const users = await axios.get<GITHUBUser>(\n      `https://api.github.com/users/${login}`,\n    );\n    setUser(users.data);\n    const respos = await axios.get<GITHUBLogin[]>(\n      `https://api.github.com/users/${login}/repos`,\n    );\n    return setRepositories(respos.data);\n  }\n\n  return (\n    <>\n      <Content>\n        <Form onSubmit={handleLogin}>\n          {selectedRepository !== '0' ? (\n            <Avatar src={user.avatar_url} />\n          ) : (\n            <NoContent src={background} />\n          )}\n          <Title>Análise de Portifólio do Github</Title>\n          <SearchContainer>\n            <Search\n              type=\"text\"\n              name=\"user\"\n              id=\"user\"\n              value={login}\n              onChange={(e) => setLogin(e.target.value)}\n              placeholder=\"Coloque seu Username\"\n            />\n\n            <SearchIconButton type=\"submit\">\n              <SearchIcon src={search} alt=\"search\" />\n            </SearchIconButton>\n          </SearchContainer>\n          <RepositoryList\n            name=\"repository\"\n            id=\"repository\"\n            value={selectedRepository}\n            onChange={(e) => setSelectedRepository(e.target.value)}\n          >\n            <RepositoryOption value=\"0\" data-testid=\"repository-option\">\n              Selecione o Repositório\n            </RepositoryOption>\n\n            {useMemo(\n              () =>\n                repositories.map((repository) => (\n                  <RepositoryOption key={repository.id} value={repository.name}>\n                    {repository.name}\n                  </RepositoryOption>\n                )),\n              [repositories],\n            )}\n          </RepositoryList>\n        </Form>\n        {selectedRepository !== '1' ? (\n          <UpperDashboardContainer>\n            <UserComponent user={user} />\n            <LanguagesComponent data={data} />\n          </UpperDashboardContainer>\n        ) : (\n          <div />\n        )}\n        {selectedRepository !== '1' ? (\n          <LowerDashboardContainer>\n            <BarChartComponent data={data} />\n            <RadarChartComponent data={data} />\n          </LowerDashboardContainer>\n        ) : (\n          <div />\n        )}\n      </Content>\n    </>\n  );\n};\n\nexport default Stats;\n","import styled from 'styled-components';\r\n\r\nexport const Content = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  align-items: center;\r\n  border: 1px solid #fff;\r\n  border-radius: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n  padding: 20px;\r\n  width: 80vw;\r\n  @media (min-width: 1025px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #ffbe55;\r\n  font-family: Roboto, Arial, Helvetica, sans-serif;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const AboutBox = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  width: 45vw;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100%;\r\n  margin-top: 10px;\r\n  width: 420px;\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const AboutText = styled.h3`\r\n  color: #fff;\r\n  font-family: Roboto, Arial, Helvetica, sans-serif;\r\n  font-size: 12px;\r\n  margin: 20px 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport const AboutTitle = styled.h2`\r\n  color: #ffbe55;\r\n  font-family: Roboto, Arial, Helvetica, sans-serif;\r\n  font-size: 16px;\r\n  margin-top: 20px;\r\n  text-align: center;\r\n`;\r\nexport const AboutLink = styled.a`\r\n  color: #fff;\r\n  font-family: Roboto, Arial, Helvetica, sans-serif;\r\n  font-size: 12px;\r\n  margin-top: 5px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n`;\r\n","/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React from 'react';\r\nimport {\r\n  Content,\r\n  Container,\r\n  Title,\r\n  Image,\r\n  AboutBox,\r\n  AboutTitle,\r\n  AboutText,\r\n} from './styles';\r\nimport background from '../../assets/background.svg';\r\n\r\nconst About: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Content>\r\n        <Title>Análise de Portifólio do Github</Title>\r\n        <Container>\r\n          <AboutBox>\r\n            <AboutTitle>Sobre o Projeto</AboutTitle>\r\n            <AboutText>\r\n              O Análise de Portifólio do Github é um projeto em formato de\r\n              DashBoard que tem como finalidade evidênciar aspectos\r\n              quantitativos de produtividade em programação dos respectivos\r\n              respoitórios.\r\n            </AboutText>\r\n            <AboutTitle>\r\n              MIT License - Direitos autorais (c) 2020 engcfraposo\r\n            </AboutTitle>\r\n            <AboutText>\r\n              A permissão é concedida, gratuitamente, a qualquer pessoa que\r\n              obtenha uma cópia deste software e dos arquivos de documentação\r\n              associados (o \"Software\"), para negociar no Software sem\r\n              restrições, incluindo, sem limitação, os direitos de uso, cópia,\r\n              modificação, fusão , publicar, distribuir, sublicenciar e / ou\r\n              vender cópias do Software e permitir que as pessoas a quem o\r\n              Software é fornecido o façam, sob as seguintes condições:\r\n            </AboutText>\r\n            <AboutText>\r\n              O aviso de direitos autorais acima e este aviso de permissão devem\r\n              ser incluídos em todas as cópias ou partes substanciais do\r\n              Software.\r\n            </AboutText>\r\n            <AboutTitle>\r\n              O SOFTWARE É FORNECIDO \"TAL COMO ESTÁ\", SEM GARANTIA DE QUALQUER\r\n              TIPO, EXPRESSA OU IMPLÍCITA, INCLUINDO MAS NÃO SE LIMITANDO A\r\n              GARANTIAS DE COMERCIALIZAÇÃO, ADEQUAÇÃO A UMA FINALIDADE\r\n              ESPECÍFICA E NÃO INFRACÇÃO. EM NENHUM CASO OS AUTORES OU TITULARES\r\n              DOS DIREITOS DE DIREITOS AUTORAIS RESPONSABILIZARÃO POR QUALQUER\r\n              RECLAMAÇÃO, DANOS OU OUTRA RESPONSABILIDADE, SEJA EM AÇÃO DE\r\n              CONTRATO, TORT OU OUTRA FORMA, DECORRENTE DE, FORA DE OU EM\r\n              CONEXÃO COM O SOFTWARE OU O USO OU OUTROS NEGÓCIOS NO PROGRAMAS.\r\n            </AboutTitle>\r\n          </AboutBox>\r\n          <Image src={background} />\r\n        </Container>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import styled from 'styled-components';\r\n\r\nexport const Content = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  align-items: center;\r\n  border-radius: 50px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  margin-top: 10px;\r\n  padding: 20px;\r\n  width: 80vw;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #ffbe55;\r\n  font-family: Roboto, Arial, Helvetica, sans-serif;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const ContactBox = styled.form`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 65vh;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  width: 45vw;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100%;\r\n  margin-top: 10px;\r\n  width: 520px;\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ContactText = styled.h3`\r\n  color: #fff;\r\n  font-family: Roboto, Arial, Helvetica, sans-serif;\r\n  font-size: 12px;\r\n  margin: 20px 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ContactTitle = styled.h2`\r\n  color: #ffbe55;\r\n  font-family: Roboto, Arial, Helvetica, sans-serif;\r\n  font-size: 18px;\r\n  margin-top: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ContactImput = styled.input`\r\n  background: #004ba8;\r\n  border: 2px solid #fff;\r\n  border-radius: 50px;\r\n  color: #fff;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  height: 3vh;\r\n  margin-top: 20px;\r\n  padding: 0 30px 0 12px;\r\n  width: 20vw;\r\n  ::-webkit-input-placeholder {\r\n    color: #fff;\r\n  }\r\n  &:hover {\r\n    background: #ffbe55;\r\n    color: #004ba8;\r\n    :-webkit-input-placeholder {\r\n      color: #004ba8;\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 240px;\r\n  }\r\n`;\r\n\r\nexport const ContactTextArea = styled.textarea`\r\n  background: #004ba8;\r\n  border: 2px solid #fff;\r\n  border-radius: 20px;\r\n  color: #fff;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  height: 30vh;\r\n  margin-top: 20px;\r\n  padding: 0 30px;\r\n  width: 20vw;\r\n  ::-webkit-input-placeholder {\r\n    color: #fff;\r\n  }\r\n  &:hover {\r\n    background: #ffbe55;\r\n    color: #004ba8;\r\n    :-webkit-input-placeholder {\r\n      color: #004ba8;\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 240px;\r\n  }\r\n`;\r\n\r\nexport const ContactButton = styled.button`\r\n  background: #ffbe55;\r\n  border: 2px solid #fff;\r\n  border-radius: 50px;\r\n  color: #004ba8;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  height: 3vh;\r\n  margin-top: 20px;\r\n  padding: 0 30px 0 12px;\r\n  width: 20vw;\r\n  ::-webkit-input-placeholder {\r\n    color: #fff;\r\n  }\r\n  &:hover {\r\n    background: #004ba8;\r\n    color: #fff;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 240px;\r\n    height: 4vh;\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React, { useState, FormEvent } from 'react';\r\nimport {\r\n  Content,\r\n  Container,\r\n  Title,\r\n  Image,\r\n  ContactBox,\r\n  ContactTitle,\r\n  ContactButton,\r\n  ContactImput,\r\n  ContactTextArea,\r\n} from './styles';\r\nimport background from '../../assets/background.svg';\r\n\r\nconst Contact: React.FC = () => {\r\n  const [name, setName] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [phone, setPhone] = useState<string>('');\r\n  const [text, setText] = useState<string>('');\r\n\r\n  function handleContact(event: FormEvent) {\r\n    event.preventDefault();\r\n    const data = {\r\n      name,\r\n      email,\r\n      phone,\r\n      text,\r\n    };\r\n    return alert(\r\n      `Email enviado para ${data.name}, Logo responderemos pelo e-mail:\r\n      ${data.email} ou pelo telefone: ${data.phone} `,\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Content>\r\n        <Title>Análise de Portifólio do Github</Title>\r\n        <Container>\r\n          <Image src={background} />\r\n          <ContactBox onSubmit={handleContact}>\r\n            <ContactTitle>Contato</ContactTitle>\r\n            <ContactImput\r\n              placeholder=\"Nome completo\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <ContactImput\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <ContactImput\r\n              placeholder=\"Telefone\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n            <ContactTextArea\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n            >\r\n              Descreva seu problema\r\n            </ContactTextArea>\r\n            <ContactButton type=\"submit\" placeholder=\"Enviar\">\r\n              Enviar\r\n            </ContactButton>\r\n          </ContactBox>\r\n        </Container>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport { Reset } from '../styles';\r\nimport Menu from '../components/Menu';\r\n\r\nimport Stats from '../pages/Stats';\r\nimport About from '../pages/About';\r\nimport Contact from '../pages/Contact';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      <Reset />\r\n      <BrowserRouter>\r\n        <Menu />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Stats} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from 'react';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Routes />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}